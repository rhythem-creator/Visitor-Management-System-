name: Backend + Frontend CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Backend + Frontend
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [22]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Print CI context
        run: |
          node -v
          npm -v
          df -h | head -n 20

      - name: Stop running services in AWS (PM2)
        run: pm2 stop all || true

      # Backend installation
      - name: Install backend deps
        working-directory: ./backend
        run: npm install

      - name: Run backend tests
        env:
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          PORT: ${{ secrets.PORT }}
        working-directory: ./backend
        run: npm test

      # Frontend install & build
      - name: Install frontend deps and build
        working-directory: ./frontend
        run: |
          rm -rf build || true
          npm install --global yarn
          yarn install
          yarn run build

      # Deploy frontend build to Nginx folder
      - name: Deploy frontend to Nginx
        run: |
          sudo mkdir -p /var/www/frontend
          sudo rm -rf /var/www/frontend/*
          sudo cp -r ./frontend/build/* /var/www/frontend/

      # Create .env for production (backend)
      - name: Create .env for production
        working-directory: ./backend
        env:
          PROD: ${{ secrets.PROD }}
        run: |
          if [ -n "${PROD}" ]; then
            echo "${PROD}" > .env
          else
            echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
          fi

      # Start / Restart PM2 for backend
      - name: Start/Restart PM2 Backend
        working-directory: ./backend
        run: |
          pm2 delete backend || true
          pm2 start "npm run start" --name "backend"
          pm2 save

      # Validate and reload Nginx (symlink is already set up once)
      - name: Validate Nginx config
        run: sudo nginx -t

      - name: Reload Nginx
        run: sudo systemctl reload nginx